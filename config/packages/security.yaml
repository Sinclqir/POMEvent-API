        
lexik_jwt_authentication:
    user_identity_field: email

security:
    password_hashers:
        App\Entity\Utilisateur: bcrypt
        App\Entity\Prestataire: bcrypt

    providers:
        prestataire_provider:
            entity:
                class: App\Entity\Prestataire
                property: email
                
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

        chain_provider:
            chain:
                providers: [app_user_provider, prestataire_provider]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/login
            stateless: true
            json_login:
                check_path: /login
                username_path: email
                password_path: motDePasse
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: app_user_provider

        login_prestataire:
            pattern: ^/login/prestataire
            stateless: true
            json_login:
                check_path: /login/prestataire
                username_path: email
                password_path: motDePasse
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: prestataire_provider

        api:
            pattern: ^/api
            stateless: true
            jwt:
                provider: chain_provider

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/login/prestataire, roles: PUBLIC_ACCESS }
        - { path: ^/api/utilisateurs, roles: PUBLIC_ACCESS }
        - { path: ^/api/utilisateur, roles: PUBLIC_ACCESS }
        - { path: ^/api/utilisateur, methods: [POST], roles: PUBLIC_ACCESS }
        - { path: ^/api/utilisateur/email, roles: IS_AUTHENTICATED_FULLY }  # Allow only authenticated users to access this route
        - { path: ^/api/prestataire, methods: [POST], roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/prestataires/search, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/prestataires, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_PRESTATAIRE]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

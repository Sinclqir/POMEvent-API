security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        prestataire_provider:
            entity:
                class: App\Entity\Prestataire
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/login
            stateless: true
            json_login:
                check_path: /login
                username_path: email
                password_path: motDePasse
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        login_prestataire:
            pattern: ^/login/prestataire
            stateless: true
            json_login:
                check_path: /login/prestataire
                username_path: email
                password_path: motDePasse
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/login/prestataire, roles: PUBLIC_ACCESS }
        - { path: ^/api/utilisateurs, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/utilisateur, methods: [POST], roles: PUBLIC_ACCESS }
        - { path: ^/api/prestataire, methods: [POST], roles: PUBLIC_ACCESS }
        - { path: ^/api/prestataires, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_PRESTATAIRE]
        ROLE_SUPER_ADMIN: ROLE_ADMIN
